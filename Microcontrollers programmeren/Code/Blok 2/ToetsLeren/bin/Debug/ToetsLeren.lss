
bin\Debug\ToetsLeren.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  000006c2  00000756  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006c2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  00000756  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .comment      00000012  00000000  00000000  00000759  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000076c  2**2
                  CONTENTS, READONLY, OCTETS
  5 .debug_aranges 00000058  00000000  00000000  000007b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   00000e9a  00000000  00000000  00000808  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 00000cf5  00000000  00000000  000016a2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   0000033e  00000000  00000000  00002397  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_frame  000000b4  00000000  00000000  000026d8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_str    00000560  00000000  00000000  0000278c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line_str 00000176  00000000  00000000  00002cec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
   8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
   c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  10:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  14:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  18:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  1c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  20:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  24:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  28:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  2c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  30:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  34:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  38:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  3c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  40:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  44:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  48:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  4c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  50:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  54:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  58:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  5c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  60:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  64:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  68:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  6c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  70:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  74:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  78:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  7c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  80:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  84:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  88:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  8c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  90:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  94:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  98:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  9c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  ac:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  bc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  cc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  dc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  e0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	0e 94 3a 02 	call	0x474	; 0x474 <main>
  f8:	0c 94 5f 03 	jmp	0x6be	; 0x6be <_exit>

000000fc <__bad_interrupt>:
  fc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000100 <init>:
#include <avr/io.h>
#include <util/delay.h>

void init (void)
{
 100:	cf 93       	push	r28
 102:	df 93       	push	r29
 104:	cd b7       	in	r28, 0x3d	; 61
 106:	de b7       	in	r29, 0x3e	; 62

00000108 <.Loc.1>:
	// Initialiseer de pinnen voor datain, shiftclk en latchclk als output
	DDRH |= (1 << PH5); //8 datain
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	91 e0       	ldi	r25, 0x01	; 1
 10c:	fc 01       	movw	r30, r24
 10e:	20 81       	ld	r18, Z
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	91 e0       	ldi	r25, 0x01	; 1

00000114 <.Loc.2>:
 114:	20 62       	ori	r18, 0x20	; 32
 116:	fc 01       	movw	r30, r24
 118:	20 83       	st	Z, r18

0000011a <.Loc.3>:
	DDRH |= (1 << PH4); //7 shiftclk
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	91 e0       	ldi	r25, 0x01	; 1
 11e:	fc 01       	movw	r30, r24
 120:	20 81       	ld	r18, Z
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	91 e0       	ldi	r25, 0x01	; 1

00000126 <.Loc.4>:
 126:	20 61       	ori	r18, 0x10	; 16
 128:	fc 01       	movw	r30, r24
 12a:	20 83       	st	Z, r18

0000012c <.Loc.5>:
	DDRG |= (1 << PG5);//4 latchclk
 12c:	83 e3       	ldi	r24, 0x33	; 51
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	fc 01       	movw	r30, r24
 132:	20 81       	ld	r18, Z
 134:	83 e3       	ldi	r24, 0x33	; 51
 136:	90 e0       	ldi	r25, 0x00	; 0

00000138 <.Loc.6>:
 138:	20 62       	ori	r18, 0x20	; 32
 13a:	fc 01       	movw	r30, r24
 13c:	20 83       	st	Z, r18

0000013e <.Loc.7>:
	// Maak shiftclk en latchclk laag
	PORTG &= ~(1 << PG5);
 13e:	84 e3       	ldi	r24, 0x34	; 52
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	fc 01       	movw	r30, r24
 144:	20 81       	ld	r18, Z

00000146 <.Loc.8>:
 146:	84 e3       	ldi	r24, 0x34	; 52
 148:	90 e0       	ldi	r25, 0x00	; 0

0000014a <.Loc.9>:
 14a:	2f 7d       	andi	r18, 0xDF	; 223
 14c:	fc 01       	movw	r30, r24
 14e:	20 83       	st	Z, r18

00000150 <.Loc.10>:
	PORTH &= ~(1 << PH5);
 150:	82 e0       	ldi	r24, 0x02	; 2
 152:	91 e0       	ldi	r25, 0x01	; 1
 154:	fc 01       	movw	r30, r24
 156:	20 81       	ld	r18, Z

00000158 <.Loc.11>:
 158:	82 e0       	ldi	r24, 0x02	; 2
 15a:	91 e0       	ldi	r25, 0x01	; 1

0000015c <.Loc.12>:
 15c:	2f 7d       	andi	r18, 0xDF	; 223
 15e:	fc 01       	movw	r30, r24
 160:	20 83       	st	Z, r18

00000162 <.Loc.13>:
}
 162:	00 00       	nop
 164:	df 91       	pop	r29
 166:	cf 91       	pop	r28
 168:	08 95       	ret

0000016a <send_data>:


void send_data(char data)
{
 16a:	cf 93       	push	r28
 16c:	df 93       	push	r29
 16e:	cd b7       	in	r28, 0x3d	; 61
 170:	de b7       	in	r29, 0x3e	; 62
 172:	a5 97       	sbiw	r28, 0x25	; 37
 174:	0f b6       	in	r0, 0x3f	; 63
 176:	f8 94       	cli
 178:	de bf       	out	0x3e, r29	; 62
 17a:	0f be       	out	0x3f, r0	; 63
 17c:	cd bf       	out	0x3d, r28	; 61
 17e:	89 8b       	std	Y+17, r24	; 0x11

00000180 <.LBB19>:
	// Herhaal voor alle bits in een char
	for(int i = 100;i >= 0; i--)
 180:	84 e6       	ldi	r24, 0x64	; 100
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	9a 83       	std	Y+2, r25	; 0x02
 186:	89 83       	std	Y+1, r24	; 0x01

00000188 <.Loc.16>:
 188:	a7 c0       	rjmp	.+334    	; 0x2d8 <.L3>

0000018a <.L12>:
	{
	    PORTH |= (1 << PH5); // Zet data pin hoog
 18a:	82 e0       	ldi	r24, 0x02	; 2
 18c:	91 e0       	ldi	r25, 0x01	; 1
 18e:	dc 01       	movw	r26, r24
 190:	2c 91       	ld	r18, X
 192:	82 e0       	ldi	r24, 0x02	; 2
 194:	91 e0       	ldi	r25, 0x01	; 1

00000196 <.Loc.18>:
 196:	20 62       	ori	r18, 0x20	; 32
 198:	fc 01       	movw	r30, r24
 19a:	20 83       	st	Z, r18

0000019c <.Loc.19>:

		// Toggle shiftclk (hoeveel tijd moest het signaal minimaal hoog zijn?)
		PORTH ^= (1 << PH4);
 19c:	82 e0       	ldi	r24, 0x02	; 2
 19e:	91 e0       	ldi	r25, 0x01	; 1
 1a0:	dc 01       	movw	r26, r24
 1a2:	3c 91       	ld	r19, X
 1a4:	82 e0       	ldi	r24, 0x02	; 2
 1a6:	91 e0       	ldi	r25, 0x01	; 1

000001a8 <.Loc.20>:
 1a8:	20 e1       	ldi	r18, 0x10	; 16
 1aa:	23 27       	eor	r18, r19
 1ac:	fc 01       	movw	r30, r24
 1ae:	20 83       	st	Z, r18
 1b0:	80 e0       	ldi	r24, 0x00	; 0
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	a8 ec       	ldi	r26, 0xC8	; 200
 1b6:	b2 e4       	ldi	r27, 0x42	; 66
 1b8:	8b 83       	std	Y+3, r24	; 0x03
 1ba:	9c 83       	std	Y+4, r25	; 0x04
 1bc:	ad 83       	std	Y+5, r26	; 0x05
 1be:	be 83       	std	Y+6, r27	; 0x06

000001c0 <.LBB20>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 1c0:	20 e0       	ldi	r18, 0x00	; 0
 1c2:	30 e0       	ldi	r19, 0x00	; 0
 1c4:	4a e7       	ldi	r20, 0x7A	; 122
 1c6:	55 e4       	ldi	r21, 0x45	; 69
 1c8:	6b 81       	ldd	r22, Y+3	; 0x03
 1ca:	7c 81       	ldd	r23, Y+4	; 0x04
 1cc:	8d 81       	ldd	r24, Y+5	; 0x05
 1ce:	9e 81       	ldd	r25, Y+6	; 0x06
 1d0:	0e 94 ca 02 	call	0x594	; 0x594 <__mulsf3>
 1d4:	6e 8b       	std	Y+22, r22	; 0x16
 1d6:	7f 8b       	std	Y+23, r23	; 0x17
 1d8:	88 8f       	std	Y+24, r24	; 0x18
 1da:	99 8f       	std	Y+25, r25	; 0x19
 1dc:	8e 89       	ldd	r24, Y+22	; 0x16
 1de:	9f 89       	ldd	r25, Y+23	; 0x17
 1e0:	a8 8d       	ldd	r26, Y+24	; 0x18
 1e2:	b9 8d       	ldd	r27, Y+25	; 0x19
 1e4:	8f 83       	std	Y+7, r24	; 0x07
 1e6:	98 87       	std	Y+8, r25	; 0x08
 1e8:	a9 87       	std	Y+9, r26	; 0x09
 1ea:	ba 87       	std	Y+10, r27	; 0x0a

000001ec <.Loc.22>:
	if (__tmp < 1.0)
 1ec:	20 e0       	ldi	r18, 0x00	; 0
 1ee:	30 e0       	ldi	r19, 0x00	; 0
 1f0:	40 e8       	ldi	r20, 0x80	; 128
 1f2:	5f e3       	ldi	r21, 0x3F	; 63
 1f4:	6f 81       	ldd	r22, Y+7	; 0x07
 1f6:	78 85       	ldd	r23, Y+8	; 0x08
 1f8:	89 85       	ldd	r24, Y+9	; 0x09
 1fa:	9a 85       	ldd	r25, Y+10	; 0x0a
 1fc:	0e 94 44 02 	call	0x488	; 0x488 <__cmpsf2>
 200:	88 23       	and	r24, r24
 202:	2c f4       	brge	.+10     	; 0x20e <.L15>

00000204 <.Loc.23>:
		__ticks = 1;
 204:	81 e0       	ldi	r24, 0x01	; 1
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	9c 87       	std	Y+12, r25	; 0x0c
 20a:	8b 87       	std	Y+11, r24	; 0x0b
 20c:	55 c0       	rjmp	.+170    	; 0x2b8 <.L6>

0000020e <.L15>:
	else if (__tmp > 65535)
 20e:	20 e0       	ldi	r18, 0x00	; 0
 210:	3f ef       	ldi	r19, 0xFF	; 255
 212:	4f e7       	ldi	r20, 0x7F	; 127
 214:	57 e4       	ldi	r21, 0x47	; 71
 216:	6f 81       	ldd	r22, Y+7	; 0x07
 218:	78 85       	ldd	r23, Y+8	; 0x08
 21a:	89 85       	ldd	r24, Y+9	; 0x09
 21c:	9a 85       	ldd	r25, Y+10	; 0x0a
 21e:	0e 94 c5 02 	call	0x58a	; 0x58a <__gesf2>
 222:	88 23       	and	r24, r24
 224:	d9 f1       	breq	.+118    	; 0x29c <.L16>
 226:	d4 f1       	brlt	.+116    	; 0x29c <.L16>

00000228 <.Loc.25>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 228:	20 e0       	ldi	r18, 0x00	; 0
 22a:	30 e0       	ldi	r19, 0x00	; 0
 22c:	40 e2       	ldi	r20, 0x20	; 32
 22e:	51 e4       	ldi	r21, 0x41	; 65
 230:	6b 81       	ldd	r22, Y+3	; 0x03
 232:	7c 81       	ldd	r23, Y+4	; 0x04
 234:	8d 81       	ldd	r24, Y+5	; 0x05
 236:	9e 81       	ldd	r25, Y+6	; 0x06
 238:	0e 94 ca 02 	call	0x594	; 0x594 <__mulsf3>
 23c:	6a 8f       	std	Y+26, r22	; 0x1a
 23e:	7b 8f       	std	Y+27, r23	; 0x1b
 240:	8c 8f       	std	Y+28, r24	; 0x1c
 242:	9d 8f       	std	Y+29, r25	; 0x1d
 244:	8a 8d       	ldd	r24, Y+26	; 0x1a
 246:	9b 8d       	ldd	r25, Y+27	; 0x1b
 248:	ac 8d       	ldd	r26, Y+28	; 0x1c
 24a:	bd 8d       	ldd	r27, Y+29	; 0x1d
 24c:	8a 8b       	std	Y+18, r24	; 0x12
 24e:	9b 8b       	std	Y+19, r25	; 0x13
 250:	ac 8b       	std	Y+20, r26	; 0x14
 252:	bd 8b       	std	Y+21, r27	; 0x15

00000254 <.Loc.26>:
 254:	6a 89       	ldd	r22, Y+18	; 0x12
 256:	7b 89       	ldd	r23, Y+19	; 0x13
 258:	8c 89       	ldd	r24, Y+20	; 0x14
 25a:	9d 89       	ldd	r25, Y+21	; 0x15
 25c:	0e 94 49 02 	call	0x492	; 0x492 <__fixunssfsi>
 260:	6e 8f       	std	Y+30, r22	; 0x1e
 262:	7f 8f       	std	Y+31, r23	; 0x1f
 264:	88 a3       	std	Y+32, r24	; 0x20
 266:	99 a3       	std	Y+33, r25	; 0x21
 268:	ae 8d       	ldd	r26, Y+30	; 0x1e
 26a:	bf 8d       	ldd	r27, Y+31	; 0x1f
 26c:	bc 87       	std	Y+12, r27	; 0x0c
 26e:	ab 87       	std	Y+11, r26	; 0x0b

00000270 <.Loc.27>:
		while(__ticks)
 270:	10 c0       	rjmp	.+32     	; 0x292 <.L9>

00000272 <.L10>:
 272:	80 e9       	ldi	r24, 0x90	; 144
 274:	91 e0       	ldi	r25, 0x01	; 1
 276:	9e 87       	std	Y+14, r25	; 0x0e
 278:	8d 87       	std	Y+13, r24	; 0x0d

0000027a <.LBB22>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
 27a:	8d 85       	ldd	r24, Y+13	; 0x0d
 27c:	9e 85       	ldd	r25, Y+14	; 0x0e

0000027e <.L1^B1>:
 27e:	01 97       	sbiw	r24, 0x01	; 1
 280:	f1 f7       	brne	.-4      	; 0x27e <.L1^B1>
 282:	9e 87       	std	Y+14, r25	; 0x0e
 284:	8d 87       	std	Y+13, r24	; 0x0d

00000286 <.Loc.29>:
	...

00000288 <.LBE22>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 288:	8b 85       	ldd	r24, Y+11	; 0x0b
 28a:	9c 85       	ldd	r25, Y+12	; 0x0c
 28c:	01 97       	sbiw	r24, 0x01	; 1
 28e:	9c 87       	std	Y+12, r25	; 0x0c
 290:	8b 87       	std	Y+11, r24	; 0x0b

00000292 <.L9>:
		while(__ticks)
 292:	8b 85       	ldd	r24, Y+11	; 0x0b
 294:	9c 85       	ldd	r25, Y+12	; 0x0c
 296:	00 97       	sbiw	r24, 0x00	; 0
 298:	61 f7       	brne	.-40     	; 0x272 <.L10>

0000029a <.Loc.32>:
		}
		return;
 29a:	19 c0       	rjmp	.+50     	; 0x2ce <.L11>

0000029c <.L16>:
	}
	else
		__ticks = (uint16_t)__tmp;
 29c:	6f 81       	ldd	r22, Y+7	; 0x07
 29e:	78 85       	ldd	r23, Y+8	; 0x08
 2a0:	89 85       	ldd	r24, Y+9	; 0x09
 2a2:	9a 85       	ldd	r25, Y+10	; 0x0a
 2a4:	0e 94 49 02 	call	0x492	; 0x492 <__fixunssfsi>
 2a8:	6a a3       	std	Y+34, r22	; 0x22
 2aa:	7b a3       	std	Y+35, r23	; 0x23
 2ac:	8c a3       	std	Y+36, r24	; 0x24
 2ae:	9d a3       	std	Y+37, r25	; 0x25
 2b0:	ea a1       	ldd	r30, Y+34	; 0x22
 2b2:	fb a1       	ldd	r31, Y+35	; 0x23
 2b4:	fc 87       	std	Y+12, r31	; 0x0c
 2b6:	eb 87       	std	Y+11, r30	; 0x0b

000002b8 <.L6>:
 2b8:	8b 85       	ldd	r24, Y+11	; 0x0b
 2ba:	9c 85       	ldd	r25, Y+12	; 0x0c
 2bc:	98 8b       	std	Y+16, r25	; 0x10
 2be:	8f 87       	std	Y+15, r24	; 0x0f

000002c0 <.LBB24>:
 2c0:	8f 85       	ldd	r24, Y+15	; 0x0f
 2c2:	98 89       	ldd	r25, Y+16	; 0x10

000002c4 <.L1^B2>:
 2c4:	01 97       	sbiw	r24, 0x01	; 1
 2c6:	f1 f7       	brne	.-4      	; 0x2c4 <.L1^B2>
 2c8:	98 8b       	std	Y+16, r25	; 0x10
 2ca:	8f 87       	std	Y+15, r24	; 0x0f

000002cc <.Loc.35>:
	...

000002ce <.L11>:
	for(int i = 100;i >= 0; i--)
 2ce:	89 81       	ldd	r24, Y+1	; 0x01
 2d0:	9a 81       	ldd	r25, Y+2	; 0x02
 2d2:	01 97       	sbiw	r24, 0x01	; 1
 2d4:	9a 83       	std	Y+2, r25	; 0x02
 2d6:	89 83       	std	Y+1, r24	; 0x01

000002d8 <.L3>:
 2d8:	89 81       	ldd	r24, Y+1	; 0x01
 2da:	9a 81       	ldd	r25, Y+2	; 0x02
 2dc:	99 23       	and	r25, r25
 2de:	0c f0       	brlt	.+2      	; 0x2e2 <.LBE19>

000002e0 <L0^A>:
 2e0:	54 cf       	rjmp	.-344    	; 0x18a <.L12>

000002e2 <.LBE19>:
		_delay_ms(100);
	}
}
 2e2:	00 00       	nop
 2e4:	00 00       	nop
 2e6:	a5 96       	adiw	r28, 0x25	; 37
 2e8:	0f b6       	in	r0, 0x3f	; 63
 2ea:	f8 94       	cli
 2ec:	de bf       	out	0x3e, r29	; 62
 2ee:	0f be       	out	0x3f, r0	; 63
 2f0:	cd bf       	out	0x3d, r28	; 61
 2f2:	df 91       	pop	r29
 2f4:	cf 91       	pop	r28
 2f6:	08 95       	ret

000002f8 <send_enable>:

void send_enable(void)
{
 2f8:	cf 93       	push	r28
 2fa:	df 93       	push	r29
 2fc:	cd b7       	in	r28, 0x3d	; 61
 2fe:	de b7       	in	r29, 0x3e	; 62

00000300 <.Loc.40>:
	send_data(0xFF);
 300:	8f ef       	ldi	r24, 0xFF	; 255
 302:	0e 94 b5 00 	call	0x16a	; 0x16a <send_data>

00000306 <.Loc.41>:
}
 306:	00 00       	nop
 308:	df 91       	pop	r29
 30a:	cf 91       	pop	r28
 30c:	08 95       	ret

0000030e <display>:

void display(char data)
{
 30e:	cf 93       	push	r28
 310:	df 93       	push	r29
 312:	cd b7       	in	r28, 0x3d	; 61
 314:	de b7       	in	r29, 0x3e	; 62
 316:	a3 97       	sbiw	r28, 0x23	; 35
 318:	0f b6       	in	r0, 0x3f	; 63
 31a:	f8 94       	cli
 31c:	de bf       	out	0x3e, r29	; 62
 31e:	0f be       	out	0x3f, r0	; 63
 320:	cd bf       	out	0x3d, r28	; 61
 322:	8f 87       	std	Y+15, r24	; 0x0f

00000324 <.Loc.43>:
	send_data(data);
 324:	8f 85       	ldd	r24, Y+15	; 0x0f
 326:	0e 94 b5 00 	call	0x16a	; 0x16a <send_data>

0000032a <.Loc.44>:
	send_enable();
 32a:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <send_enable>

0000032e <.Loc.45>:

	// Toggle latchclk (hoeveel tijd moest het signaal minimaal hoog zijn?)
	PORTG ^= (1 << PG5);
 32e:	84 e3       	ldi	r24, 0x34	; 52
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	dc 01       	movw	r26, r24
 334:	3c 91       	ld	r19, X
 336:	84 e3       	ldi	r24, 0x34	; 52
 338:	90 e0       	ldi	r25, 0x00	; 0

0000033a <.Loc.46>:
 33a:	20 e2       	ldi	r18, 0x20	; 32
 33c:	23 27       	eor	r18, r19
 33e:	fc 01       	movw	r30, r24
 340:	20 83       	st	Z, r18
 342:	80 e0       	ldi	r24, 0x00	; 0
 344:	90 e0       	ldi	r25, 0x00	; 0
 346:	a8 ec       	ldi	r26, 0xC8	; 200
 348:	b2 e4       	ldi	r27, 0x42	; 66
 34a:	89 83       	std	Y+1, r24	; 0x01
 34c:	9a 83       	std	Y+2, r25	; 0x02
 34e:	ab 83       	std	Y+3, r26	; 0x03
 350:	bc 83       	std	Y+4, r27	; 0x04

00000352 <.LBB26>:
	__tmp = ((F_CPU) / 4e3) * __ms;
 352:	20 e0       	ldi	r18, 0x00	; 0
 354:	30 e0       	ldi	r19, 0x00	; 0
 356:	4a e7       	ldi	r20, 0x7A	; 122
 358:	55 e4       	ldi	r21, 0x45	; 69
 35a:	69 81       	ldd	r22, Y+1	; 0x01
 35c:	7a 81       	ldd	r23, Y+2	; 0x02
 35e:	8b 81       	ldd	r24, Y+3	; 0x03
 360:	9c 81       	ldd	r25, Y+4	; 0x04
 362:	0e 94 ca 02 	call	0x594	; 0x594 <__mulsf3>
 366:	6c 8b       	std	Y+20, r22	; 0x14
 368:	7d 8b       	std	Y+21, r23	; 0x15
 36a:	8e 8b       	std	Y+22, r24	; 0x16
 36c:	9f 8b       	std	Y+23, r25	; 0x17
 36e:	8c 89       	ldd	r24, Y+20	; 0x14
 370:	9d 89       	ldd	r25, Y+21	; 0x15
 372:	ae 89       	ldd	r26, Y+22	; 0x16
 374:	bf 89       	ldd	r27, Y+23	; 0x17
 376:	8d 83       	std	Y+5, r24	; 0x05
 378:	9e 83       	std	Y+6, r25	; 0x06
 37a:	af 83       	std	Y+7, r26	; 0x07
 37c:	b8 87       	std	Y+8, r27	; 0x08

0000037e <.Loc.48>:
	if (__tmp < 1.0)
 37e:	20 e0       	ldi	r18, 0x00	; 0
 380:	30 e0       	ldi	r19, 0x00	; 0
 382:	40 e8       	ldi	r20, 0x80	; 128
 384:	5f e3       	ldi	r21, 0x3F	; 63
 386:	6d 81       	ldd	r22, Y+5	; 0x05
 388:	7e 81       	ldd	r23, Y+6	; 0x06
 38a:	8f 81       	ldd	r24, Y+7	; 0x07
 38c:	98 85       	ldd	r25, Y+8	; 0x08
 38e:	0e 94 44 02 	call	0x488	; 0x488 <__cmpsf2>
 392:	88 23       	and	r24, r24
 394:	2c f4       	brge	.+10     	; 0x3a0 <.L29>

00000396 <.Loc.49>:
		__ticks = 1;
 396:	81 e0       	ldi	r24, 0x01	; 1
 398:	90 e0       	ldi	r25, 0x00	; 0
 39a:	9a 87       	std	Y+10, r25	; 0x0a
 39c:	89 87       	std	Y+9, r24	; 0x09
 39e:	55 c0       	rjmp	.+170    	; 0x44a <.L21>

000003a0 <.L29>:
	else if (__tmp > 65535)
 3a0:	20 e0       	ldi	r18, 0x00	; 0
 3a2:	3f ef       	ldi	r19, 0xFF	; 255
 3a4:	4f e7       	ldi	r20, 0x7F	; 127
 3a6:	57 e4       	ldi	r21, 0x47	; 71
 3a8:	6d 81       	ldd	r22, Y+5	; 0x05
 3aa:	7e 81       	ldd	r23, Y+6	; 0x06
 3ac:	8f 81       	ldd	r24, Y+7	; 0x07
 3ae:	98 85       	ldd	r25, Y+8	; 0x08
 3b0:	0e 94 c5 02 	call	0x58a	; 0x58a <__gesf2>
 3b4:	88 23       	and	r24, r24
 3b6:	d9 f1       	breq	.+118    	; 0x42e <.L30>
 3b8:	d4 f1       	brlt	.+116    	; 0x42e <.L30>

000003ba <.Loc.51>:
		__ticks = (uint16_t) (__ms * 10.0);
 3ba:	20 e0       	ldi	r18, 0x00	; 0
 3bc:	30 e0       	ldi	r19, 0x00	; 0
 3be:	40 e2       	ldi	r20, 0x20	; 32
 3c0:	51 e4       	ldi	r21, 0x41	; 65
 3c2:	69 81       	ldd	r22, Y+1	; 0x01
 3c4:	7a 81       	ldd	r23, Y+2	; 0x02
 3c6:	8b 81       	ldd	r24, Y+3	; 0x03
 3c8:	9c 81       	ldd	r25, Y+4	; 0x04
 3ca:	0e 94 ca 02 	call	0x594	; 0x594 <__mulsf3>
 3ce:	68 8f       	std	Y+24, r22	; 0x18
 3d0:	79 8f       	std	Y+25, r23	; 0x19
 3d2:	8a 8f       	std	Y+26, r24	; 0x1a
 3d4:	9b 8f       	std	Y+27, r25	; 0x1b
 3d6:	88 8d       	ldd	r24, Y+24	; 0x18
 3d8:	99 8d       	ldd	r25, Y+25	; 0x19
 3da:	aa 8d       	ldd	r26, Y+26	; 0x1a
 3dc:	bb 8d       	ldd	r27, Y+27	; 0x1b
 3de:	88 8b       	std	Y+16, r24	; 0x10
 3e0:	99 8b       	std	Y+17, r25	; 0x11
 3e2:	aa 8b       	std	Y+18, r26	; 0x12
 3e4:	bb 8b       	std	Y+19, r27	; 0x13

000003e6 <.Loc.52>:
 3e6:	68 89       	ldd	r22, Y+16	; 0x10
 3e8:	79 89       	ldd	r23, Y+17	; 0x11
 3ea:	8a 89       	ldd	r24, Y+18	; 0x12
 3ec:	9b 89       	ldd	r25, Y+19	; 0x13
 3ee:	0e 94 49 02 	call	0x492	; 0x492 <__fixunssfsi>
 3f2:	6c 8f       	std	Y+28, r22	; 0x1c
 3f4:	7d 8f       	std	Y+29, r23	; 0x1d
 3f6:	8e 8f       	std	Y+30, r24	; 0x1e
 3f8:	9f 8f       	std	Y+31, r25	; 0x1f
 3fa:	ac 8d       	ldd	r26, Y+28	; 0x1c
 3fc:	bd 8d       	ldd	r27, Y+29	; 0x1d
 3fe:	ba 87       	std	Y+10, r27	; 0x0a
 400:	a9 87       	std	Y+9, r26	; 0x09

00000402 <.Loc.53>:
		while(__ticks)
 402:	10 c0       	rjmp	.+32     	; 0x424 <.L24>

00000404 <.L25>:
 404:	80 e9       	ldi	r24, 0x90	; 144
 406:	91 e0       	ldi	r25, 0x01	; 1
 408:	9c 87       	std	Y+12, r25	; 0x0c
 40a:	8b 87       	std	Y+11, r24	; 0x0b

0000040c <.LBB28>:
 40c:	8b 85       	ldd	r24, Y+11	; 0x0b
 40e:	9c 85       	ldd	r25, Y+12	; 0x0c

00000410 <.L1^B3>:
 410:	01 97       	sbiw	r24, 0x01	; 1
 412:	f1 f7       	brne	.-4      	; 0x410 <.L1^B3>
 414:	9c 87       	std	Y+12, r25	; 0x0c
 416:	8b 87       	std	Y+11, r24	; 0x0b

00000418 <.Loc.55>:
	...

0000041a <.LBE28>:
			__ticks --;
 41a:	89 85       	ldd	r24, Y+9	; 0x09
 41c:	9a 85       	ldd	r25, Y+10	; 0x0a
 41e:	01 97       	sbiw	r24, 0x01	; 1
 420:	9a 87       	std	Y+10, r25	; 0x0a
 422:	89 87       	std	Y+9, r24	; 0x09

00000424 <.L24>:
		while(__ticks)
 424:	89 85       	ldd	r24, Y+9	; 0x09
 426:	9a 85       	ldd	r25, Y+10	; 0x0a
 428:	00 97       	sbiw	r24, 0x00	; 0
 42a:	61 f7       	brne	.-40     	; 0x404 <.L25>

0000042c <.Loc.58>:
		return;
 42c:	19 c0       	rjmp	.+50     	; 0x460 <.L26>

0000042e <.L30>:
		__ticks = (uint16_t)__tmp;
 42e:	6d 81       	ldd	r22, Y+5	; 0x05
 430:	7e 81       	ldd	r23, Y+6	; 0x06
 432:	8f 81       	ldd	r24, Y+7	; 0x07
 434:	98 85       	ldd	r25, Y+8	; 0x08
 436:	0e 94 49 02 	call	0x492	; 0x492 <__fixunssfsi>
 43a:	68 a3       	std	Y+32, r22	; 0x20
 43c:	79 a3       	std	Y+33, r23	; 0x21
 43e:	8a a3       	std	Y+34, r24	; 0x22
 440:	9b a3       	std	Y+35, r25	; 0x23
 442:	e8 a1       	ldd	r30, Y+32	; 0x20
 444:	f9 a1       	ldd	r31, Y+33	; 0x21
 446:	fa 87       	std	Y+10, r31	; 0x0a
 448:	e9 87       	std	Y+9, r30	; 0x09

0000044a <.L21>:
 44a:	89 85       	ldd	r24, Y+9	; 0x09
 44c:	9a 85       	ldd	r25, Y+10	; 0x0a
 44e:	9e 87       	std	Y+14, r25	; 0x0e
 450:	8d 87       	std	Y+13, r24	; 0x0d

00000452 <.LBB30>:
 452:	8d 85       	ldd	r24, Y+13	; 0x0d
 454:	9e 85       	ldd	r25, Y+14	; 0x0e

00000456 <.L1^B4>:
 456:	01 97       	sbiw	r24, 0x01	; 1
 458:	f1 f7       	brne	.-4      	; 0x456 <.L1^B4>
 45a:	9e 87       	std	Y+14, r25	; 0x0e
 45c:	8d 87       	std	Y+13, r24	; 0x0d

0000045e <.Loc.61>:
	...

00000460 <.L26>:
    _delay_ms(100);
}
 460:	00 00       	nop
 462:	a3 96       	adiw	r28, 0x23	; 35
 464:	0f b6       	in	r0, 0x3f	; 63
 466:	f8 94       	cli
 468:	de bf       	out	0x3e, r29	; 62
 46a:	0f be       	out	0x3f, r0	; 63
 46c:	cd bf       	out	0x3d, r28	; 61
 46e:	df 91       	pop	r29
 470:	cf 91       	pop	r28
 472:	08 95       	ret

00000474 <main>:

int main(void)
{
 474:	cf 93       	push	r28
 476:	df 93       	push	r29
 478:	cd b7       	in	r28, 0x3d	; 61
 47a:	de b7       	in	r29, 0x3e	; 62

0000047c <.Loc.64>:
	init();
 47c:	0e 94 80 00 	call	0x100	; 0x100 <init>

00000480 <.L32>:
	while(1){
        display(0xA5);
 480:	85 ea       	ldi	r24, 0xA5	; 165
 482:	0e 94 87 01 	call	0x30e	; 0x30e <display>
 486:	fc cf       	rjmp	.-8      	; 0x480 <.L32>

00000488 <__cmpsf2>:
 488:	0e 94 78 02 	call	0x4f0	; 0x4f0 <__fp_cmp>
 48c:	08 f4       	brcc	.+2      	; 0x490 <.L1^B1>
 48e:	81 e0       	ldi	r24, 0x01	; 1

00000490 <.L1^B1>:
 490:	08 95       	ret

00000492 <__fixunssfsi>:
 492:	0e 94 a4 02 	call	0x548	; 0x548 <__fp_splitA>
 496:	88 f0       	brcs	.+34     	; 0x4ba <.L_err>
 498:	9f 57       	subi	r25, 0x7F	; 127
 49a:	98 f0       	brcs	.+38     	; 0x4c2 <.L_zr>
 49c:	b9 2f       	mov	r27, r25
 49e:	99 27       	eor	r25, r25
 4a0:	b7 51       	subi	r27, 0x17	; 23
 4a2:	b0 f0       	brcs	.+44     	; 0x4d0 <.L4^B1>
 4a4:	e1 f0       	breq	.+56     	; 0x4de <.L_sign>

000004a6 <.L1^B1>:
 4a6:	66 0f       	add	r22, r22
 4a8:	77 1f       	adc	r23, r23
 4aa:	88 1f       	adc	r24, r24
 4ac:	99 1f       	adc	r25, r25
 4ae:	1a f0       	brmi	.+6      	; 0x4b6 <.L2^B1>
 4b0:	ba 95       	dec	r27
 4b2:	c9 f7       	brne	.-14     	; 0x4a6 <.L1^B1>
 4b4:	14 c0       	rjmp	.+40     	; 0x4de <.L_sign>

000004b6 <.L2^B1>:
 4b6:	b1 30       	cpi	r27, 0x01	; 1
 4b8:	91 f0       	breq	.+36     	; 0x4de <.L_sign>

000004ba <.L_err>:
 4ba:	0e 94 be 02 	call	0x57c	; 0x57c <__fp_zero>
 4be:	b1 e0       	ldi	r27, 0x01	; 1
 4c0:	08 95       	ret

000004c2 <.L_zr>:
 4c2:	0c 94 be 02 	jmp	0x57c	; 0x57c <__fp_zero>

000004c6 <.L3^B1>:
 4c6:	67 2f       	mov	r22, r23
 4c8:	78 2f       	mov	r23, r24
 4ca:	88 27       	eor	r24, r24
 4cc:	b8 5f       	subi	r27, 0xF8	; 248
 4ce:	39 f0       	breq	.+14     	; 0x4de <.L_sign>

000004d0 <.L4^B1>:
 4d0:	b9 3f       	cpi	r27, 0xF9	; 249
 4d2:	cc f3       	brlt	.-14     	; 0x4c6 <.L3^B1>

000004d4 <.L5^B1>:
 4d4:	86 95       	lsr	r24
 4d6:	77 95       	ror	r23
 4d8:	67 95       	ror	r22
 4da:	b3 95       	inc	r27
 4dc:	d9 f7       	brne	.-10     	; 0x4d4 <.L5^B1>

000004de <.L_sign>:
 4de:	3e f4       	brtc	.+14     	; 0x4ee <.L6^B1>
 4e0:	90 95       	com	r25
 4e2:	80 95       	com	r24
 4e4:	70 95       	com	r23
 4e6:	61 95       	neg	r22
 4e8:	7f 4f       	sbci	r23, 0xFF	; 255
 4ea:	8f 4f       	sbci	r24, 0xFF	; 255
 4ec:	9f 4f       	sbci	r25, 0xFF	; 255

000004ee <.L6^B1>:
 4ee:	08 95       	ret

000004f0 <__fp_cmp>:
 4f0:	99 0f       	add	r25, r25
 4f2:	00 08       	sbc	r0, r0
 4f4:	55 0f       	add	r21, r21
 4f6:	aa 0b       	sbc	r26, r26
 4f8:	e0 e8       	ldi	r30, 0x80	; 128
 4fa:	fe ef       	ldi	r31, 0xFE	; 254
 4fc:	16 16       	cp	r1, r22
 4fe:	17 06       	cpc	r1, r23
 500:	e8 07       	cpc	r30, r24
 502:	f9 07       	cpc	r31, r25
 504:	c0 f0       	brcs	.+48     	; 0x536 <.L9^B1>
 506:	12 16       	cp	r1, r18
 508:	13 06       	cpc	r1, r19
 50a:	e4 07       	cpc	r30, r20
 50c:	f5 07       	cpc	r31, r21
 50e:	98 f0       	brcs	.+38     	; 0x536 <.L9^B1>
 510:	62 1b       	sub	r22, r18
 512:	73 0b       	sbc	r23, r19
 514:	84 0b       	sbc	r24, r20
 516:	95 0b       	sbc	r25, r21
 518:	39 f4       	brne	.+14     	; 0x528 <.L1^B1>
 51a:	0a 26       	eor	r0, r26
 51c:	61 f0       	breq	.+24     	; 0x536 <.L9^B1>
 51e:	23 2b       	or	r18, r19
 520:	24 2b       	or	r18, r20
 522:	25 2b       	or	r18, r21
 524:	21 f4       	brne	.+8      	; 0x52e <.L2^B1>
 526:	08 95       	ret

00000528 <.L1^B1>:
 528:	0a 26       	eor	r0, r26
 52a:	09 f4       	brne	.+2      	; 0x52e <.L2^B1>
 52c:	a1 40       	sbci	r26, 0x01	; 1

0000052e <.L2^B1>:
 52e:	a6 95       	lsr	r26
 530:	8f ef       	ldi	r24, 0xFF	; 255
 532:	81 1d       	adc	r24, r1
 534:	81 1d       	adc	r24, r1

00000536 <.L9^B1>:
 536:	08 95       	ret

00000538 <__fp_split3>:
 538:	57 fd       	sbrc	r21, 7
 53a:	90 58       	subi	r25, 0x80	; 128
 53c:	44 0f       	add	r20, r20
 53e:	55 1f       	adc	r21, r21
 540:	59 f0       	breq	.+22     	; 0x558 <.L4^B1>
 542:	5f 3f       	cpi	r21, 0xFF	; 255
 544:	71 f0       	breq	.+28     	; 0x562 <.L5^B1>

00000546 <.L1^B1>:
 546:	47 95       	ror	r20

00000548 <__fp_splitA>:
 548:	88 0f       	add	r24, r24
 54a:	97 fb       	bst	r25, 7
 54c:	99 1f       	adc	r25, r25
 54e:	61 f0       	breq	.+24     	; 0x568 <.L6^B1>
 550:	9f 3f       	cpi	r25, 0xFF	; 255
 552:	79 f0       	breq	.+30     	; 0x572 <.L7^B1>

00000554 <.L3^B1>:
 554:	87 95       	ror	r24
 556:	08 95       	ret

00000558 <.L4^B1>:
 558:	12 16       	cp	r1, r18
 55a:	13 06       	cpc	r1, r19
 55c:	14 06       	cpc	r1, r20
 55e:	55 1f       	adc	r21, r21
 560:	f2 cf       	rjmp	.-28     	; 0x546 <.L1^B1>

00000562 <.L5^B1>:
 562:	46 95       	lsr	r20
 564:	f1 df       	rcall	.-30     	; 0x548 <__fp_splitA>
 566:	08 c0       	rjmp	.+16     	; 0x578 <.L8^B1>

00000568 <.L6^B1>:
 568:	16 16       	cp	r1, r22
 56a:	17 06       	cpc	r1, r23
 56c:	18 06       	cpc	r1, r24
 56e:	99 1f       	adc	r25, r25
 570:	f1 cf       	rjmp	.-30     	; 0x554 <.L3^B1>

00000572 <.L7^B1>:
 572:	86 95       	lsr	r24
 574:	71 05       	cpc	r23, r1
 576:	61 05       	cpc	r22, r1

00000578 <.L8^B1>:
 578:	08 94       	sec
 57a:	08 95       	ret

0000057c <__fp_zero>:
 57c:	e8 94       	clt

0000057e <__fp_szero>:
 57e:	bb 27       	eor	r27, r27
 580:	66 27       	eor	r22, r22
 582:	77 27       	eor	r23, r23
 584:	cb 01       	movw	r24, r22
 586:	97 f9       	bld	r25, 7
 588:	08 95       	ret

0000058a <__gesf2>:
 58a:	0e 94 78 02 	call	0x4f0	; 0x4f0 <__fp_cmp>
 58e:	08 f4       	brcc	.+2      	; 0x592 <.L1^B1>
 590:	8f ef       	ldi	r24, 0xFF	; 255

00000592 <.L1^B1>:
 592:	08 95       	ret

00000594 <__mulsf3>:
 594:	0e 94 dd 02 	call	0x5ba	; 0x5ba <__mulsf3x>
 598:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__fp_round>

0000059c <.L^B1>:
 59c:	0e 94 40 03 	call	0x680	; 0x680 <__fp_pscA>
 5a0:	38 f0       	brcs	.+14     	; 0x5b0 <.L1^B1>
 5a2:	0e 94 47 03 	call	0x68e	; 0x68e <__fp_pscB>
 5a6:	20 f0       	brcs	.+8      	; 0x5b0 <.L1^B1>
 5a8:	95 23       	and	r25, r21
 5aa:	11 f0       	breq	.+4      	; 0x5b0 <.L1^B1>
 5ac:	0c 94 37 03 	jmp	0x66e	; 0x66e <__fp_inf>

000005b0 <.L1^B1>:
 5b0:	0c 94 3d 03 	jmp	0x67a	; 0x67a <__fp_nan>

000005b4 <.L2^B1>:
 5b4:	11 24       	eor	r1, r1
 5b6:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__fp_szero>

000005ba <__mulsf3x>:
 5ba:	0e 94 9c 02 	call	0x538	; 0x538 <__fp_split3>
 5be:	70 f3       	brcs	.-36     	; 0x59c <.L^B1>

000005c0 <__mulsf3_pse>:
 5c0:	95 9f       	mul	r25, r21
 5c2:	c1 f3       	breq	.-16     	; 0x5b4 <.L2^B1>
 5c4:	95 0f       	add	r25, r21
 5c6:	50 e0       	ldi	r21, 0x00	; 0
 5c8:	55 1f       	adc	r21, r21
 5ca:	62 9f       	mul	r22, r18
 5cc:	f0 01       	movw	r30, r0
 5ce:	72 9f       	mul	r23, r18
 5d0:	bb 27       	eor	r27, r27
 5d2:	f0 0d       	add	r31, r0
 5d4:	b1 1d       	adc	r27, r1
 5d6:	63 9f       	mul	r22, r19
 5d8:	aa 27       	eor	r26, r26
 5da:	f0 0d       	add	r31, r0
 5dc:	b1 1d       	adc	r27, r1
 5de:	aa 1f       	adc	r26, r26
 5e0:	64 9f       	mul	r22, r20
 5e2:	66 27       	eor	r22, r22
 5e4:	b0 0d       	add	r27, r0
 5e6:	a1 1d       	adc	r26, r1
 5e8:	66 1f       	adc	r22, r22
 5ea:	82 9f       	mul	r24, r18
 5ec:	22 27       	eor	r18, r18
 5ee:	b0 0d       	add	r27, r0
 5f0:	a1 1d       	adc	r26, r1
 5f2:	62 1f       	adc	r22, r18
 5f4:	73 9f       	mul	r23, r19
 5f6:	b0 0d       	add	r27, r0
 5f8:	a1 1d       	adc	r26, r1
 5fa:	62 1f       	adc	r22, r18
 5fc:	83 9f       	mul	r24, r19
 5fe:	a0 0d       	add	r26, r0
 600:	61 1d       	adc	r22, r1
 602:	22 1f       	adc	r18, r18
 604:	74 9f       	mul	r23, r20
 606:	33 27       	eor	r19, r19
 608:	a0 0d       	add	r26, r0
 60a:	61 1d       	adc	r22, r1
 60c:	23 1f       	adc	r18, r19
 60e:	84 9f       	mul	r24, r20
 610:	60 0d       	add	r22, r0
 612:	21 1d       	adc	r18, r1
 614:	82 2f       	mov	r24, r18
 616:	76 2f       	mov	r23, r22
 618:	6a 2f       	mov	r22, r26
 61a:	11 24       	eor	r1, r1
 61c:	9f 57       	subi	r25, 0x7F	; 127
 61e:	50 40       	sbci	r21, 0x00	; 0
 620:	9a f0       	brmi	.+38     	; 0x648 <.L13^B1>
 622:	f1 f0       	breq	.+60     	; 0x660 <.L15^B1>

00000624 <.L10^B1>:
 624:	88 23       	and	r24, r24
 626:	4a f0       	brmi	.+18     	; 0x63a <.L11^B1>
 628:	ee 0f       	add	r30, r30
 62a:	ff 1f       	adc	r31, r31
 62c:	bb 1f       	adc	r27, r27
 62e:	66 1f       	adc	r22, r22
 630:	77 1f       	adc	r23, r23
 632:	88 1f       	adc	r24, r24
 634:	91 50       	subi	r25, 0x01	; 1
 636:	50 40       	sbci	r21, 0x00	; 0
 638:	a9 f7       	brne	.-22     	; 0x624 <.L10^B1>

0000063a <.L11^B1>:
 63a:	9e 3f       	cpi	r25, 0xFE	; 254
 63c:	51 05       	cpc	r21, r1
 63e:	80 f0       	brcs	.+32     	; 0x660 <.L15^B1>
 640:	0c 94 37 03 	jmp	0x66e	; 0x66e <__fp_inf>

00000644 <.L12^B1>:
 644:	0c 94 bf 02 	jmp	0x57e	; 0x57e <__fp_szero>

00000648 <.L13^B1>:
 648:	5f 3f       	cpi	r21, 0xFF	; 255
 64a:	e4 f3       	brlt	.-8      	; 0x644 <.L12^B1>
 64c:	98 3e       	cpi	r25, 0xE8	; 232
 64e:	d4 f3       	brlt	.-12     	; 0x644 <.L12^B1>

00000650 <.L14^B1>:
 650:	86 95       	lsr	r24
 652:	77 95       	ror	r23
 654:	67 95       	ror	r22
 656:	b7 95       	ror	r27
 658:	f7 95       	ror	r31
 65a:	e7 95       	ror	r30
 65c:	9f 5f       	subi	r25, 0xFF	; 255
 65e:	c1 f7       	brne	.-16     	; 0x650 <.L14^B1>

00000660 <.L15^B1>:
 660:	fe 2b       	or	r31, r30
 662:	88 0f       	add	r24, r24
 664:	91 1d       	adc	r25, r1
 666:	96 95       	lsr	r25
 668:	87 95       	ror	r24
 66a:	97 f9       	bld	r25, 7
 66c:	08 95       	ret

0000066e <__fp_inf>:
 66e:	97 f9       	bld	r25, 7
 670:	9f 67       	ori	r25, 0x7F	; 127
 672:	80 e8       	ldi	r24, 0x80	; 128
 674:	70 e0       	ldi	r23, 0x00	; 0
 676:	60 e0       	ldi	r22, 0x00	; 0
 678:	08 95       	ret

0000067a <__fp_nan>:
 67a:	9f ef       	ldi	r25, 0xFF	; 255
 67c:	80 ec       	ldi	r24, 0xC0	; 192
 67e:	08 95       	ret

00000680 <__fp_pscA>:
 680:	00 24       	eor	r0, r0
 682:	0a 94       	dec	r0
 684:	16 16       	cp	r1, r22
 686:	17 06       	cpc	r1, r23
 688:	18 06       	cpc	r1, r24
 68a:	09 06       	cpc	r0, r25
 68c:	08 95       	ret

0000068e <__fp_pscB>:
 68e:	00 24       	eor	r0, r0
 690:	0a 94       	dec	r0
 692:	12 16       	cp	r1, r18
 694:	13 06       	cpc	r1, r19
 696:	14 06       	cpc	r1, r20
 698:	05 06       	cpc	r0, r21
 69a:	08 95       	ret

0000069c <__fp_round>:
 69c:	09 2e       	mov	r0, r25
 69e:	03 94       	inc	r0
 6a0:	00 0c       	add	r0, r0
 6a2:	11 f4       	brne	.+4      	; 0x6a8 <.L1^B1>
 6a4:	88 23       	and	r24, r24
 6a6:	52 f0       	brmi	.+20     	; 0x6bc <.L3^B1>

000006a8 <.L1^B1>:
 6a8:	bb 0f       	add	r27, r27
 6aa:	40 f4       	brcc	.+16     	; 0x6bc <.L3^B1>
 6ac:	bf 2b       	or	r27, r31
 6ae:	11 f4       	brne	.+4      	; 0x6b4 <.L2^B1>
 6b0:	60 ff       	sbrs	r22, 0
 6b2:	04 c0       	rjmp	.+8      	; 0x6bc <.L3^B1>

000006b4 <.L2^B1>:
 6b4:	6f 5f       	subi	r22, 0xFF	; 255
 6b6:	7f 4f       	sbci	r23, 0xFF	; 255
 6b8:	8f 4f       	sbci	r24, 0xFF	; 255
 6ba:	9f 4f       	sbci	r25, 0xFF	; 255

000006bc <.L3^B1>:
 6bc:	08 95       	ret

000006be <_exit>:
 6be:	f8 94       	cli

000006c0 <__stop_program>:
 6c0:	ff cf       	rjmp	.-2      	; 0x6c0 <__stop_program>
